= NokoBuilder

NokoBuilder is a gem that makes building out xml using nokogiri even easier! It gives you the ability to add defaults to each xml element, while still maintaining all the stuff you get from the normal nokogiri xml builder.

== Examples

===DEFAULTS

You can set default values for xml nodes that can be overwritten by passing the value as an option when creating the xml document.

  builder = NokoBuilder.new(options) do |xml|
    xml.One :default => "default value"
    xml.Two "not overwriteable"
    xml.Three
  end

If <tt>options = {}</tt> then <tt>builder.to_xml</tt> would produce:
  
  <?xml version="1.0"?>
  <Doc>
    <One>default value</One>
    <Two>not overwriteable</Two>
  </Doc>

If <tt>options = {:One => "BOOM"}</tt> then <tt>builder.to_xml</tt> would produce:

  <?xml version="1.0"?>
  <Doc>
    <One>BOOM</One>
    <Two>not overwriteable</Two>
  </Doc>
  
If <tt>options = {:Three => "BOOM"}</tt> then <tt>builder.to_xml</tt> would produce:

    <?xml version="1.0"?>
    <Doc>
      <One>default value</One>
      <Two>not overwriteable</Two>
      <Three>BOOM</Three>
    </Doc>

===NOKOGIRI OPTIONS

You can pass in options to the nokogiri builder as the second argument if you want.
  
  builder = NokoBuilder.new({},{:encoding => 'UTF-8'}) do |xml|
    xml.One do
      xml.Inside :default => "namey"
    end
  end

Doing <tt>builder.to_xml</tt> Would produce:

  <?xml version="1.0" encoding="UTF-8"?>
  <One>
    <Inside>namey</Inside>
  </One>
  
===ATTRIBUTES

You can pass in attributes to the nokobuilder the same way you would with nokogiri builder.

    builder = NokoBuilder.new do |xml|
      xml.One('xmlns' => 'http://stuff') do
        xml.Inside({:default => "namey"}, {:attribute => "me"})
        xml.Another(:one => "one", :two => "two")
      end
    end

Doing <tt>builder.to_xml</tt> Would produce:

  <?xml version="1.0"?>
  <One xmlns="http://stuff">
    <Inside attribute="me">namey</Inside>
    <Another one="one" two="two"/>
  </One>

== Contributing to noko_builder
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2012 frausto. See LICENSE.txt for
further details.

